name: Release Management

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  NODE_VERSION: '20'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: |
        npm run test:unit
        npm run test:integration
        npm run test:coverage
        npm run lint
        npm run type-check
        
    - name: Build application
      run: npm run build
      
    - name: Generate changelog
      id: changelog
      run: |
        # Get the tag name
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG_NAME="${{ github.event.inputs.version }}"
        else
          TAG_NAME="${GITHUB_REF#refs/tags/}"
        fi
        
        # Get commits since last tag
        LAST_TAG=$(git tag --sort=-version:refname | head -2 | tail -1)
        if [ -z "$LAST_TAG" ]; then
          LAST_TAG=$(git rev-list --max-parents=0 HEAD)
        fi
        
        echo "## Changes in $TAG_NAME" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD >> CHANGELOG.md
        
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.changelog.outputs.tag_name }}
        name: Release ${{ steps.changelog.outputs.tag_name }}
        bodyFile: CHANGELOG.md
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy release to production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
  post-release:
    name: Post Release Tasks
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run post-release health check
      run: npm run test:health
      env:
        HEALTH_CHECK_URL: ${{ secrets.PRODUCTION_URL }}
        
    - name: Notify team
      run: |
        echo "ðŸŽ‰ New release deployed successfully!"
        echo "Version: ${{ steps.changelog.outputs.tag_name }}"
        echo "Production URL: ${{ secrets.PRODUCTION_URL }}"
